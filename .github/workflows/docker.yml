name: 构建 ngx_brotli 模块
on:
  workflow_dispatch:
    inputs:
      ngx_stable_version_number:
        description: 'literal'
        required: true
      module_version_number:
        description: 'literal'
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    name: 构建多平台模块
    env:
      IMAGE_NAME: ngx_brotli
    strategy:
      matrix:
        target: ['glibc', 'musl']
    steps:
      -
        name: Checkout
        uses: actions/checkout@master

      -
        name: Set Up QEMU
        uses: docker/setup-qemu-action@v1

      -
        name: Set Up Buildx
        uses: docker/setup-buildx-action@v1

      -
        name: Login DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      -
        name: Set Up Cache
        uses: actions/cache@v2
        id: buildx-cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx

      -
        name: Buildx
        uses: docker/build-push-action@v2
        env:
          TARGET: ${{ matrix.target }}
          NGX_VERSION_NUMBER: ${{ github.event.inputs.ngx_stable_version_number }}
          MODULE_VERSION_NUMBER: ${{ github.event.inputs.module_version_number }}
        with:
          context: .
          file: docker/Dockerfile.${{ env.TARGET }}
          build-args: |
            NGX_VER=stable
          platforms: |
            linux/386
            linux/amd64
            linux/arm64
            linux/arm/v7
            linux/arm/v6
            linux/ppc64le
            linux/s390x
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:ngx-${{ env.NGX_VERSION_NUMBER }}-module-${{ env.MODULE_VERSION_NUMBER }}-${{ env.TARGET }}
